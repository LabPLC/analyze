#!/usr/bin/env ruby

# REQUIREMENTS

require 'trollop'
require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'analyze'))

# CONSTANTS

SERVICE_SORT = 'service'.freeze
HITS_SORT    = 'hits'.freeze
DEFAULT_SORT = SERVICE_SORT

TIME_FORMAT = '%d/%b/%Y:%H:%M:%S %z'.freeze

# OPTIONS

opts = Trollop.options do
  opt :path, "Path to Nginx access logs", type: :string, required: true
  opt :sort, "Sorting method (`service` or `hits`)", type: :string, default: DEFAULT_SORT
  opt :before, "Ignores all log items after a specified time (format: '24/Jan/2014:11:19:39 -0600')", type: :string
  opt :after, "Ignores all log items before a specified time (format: '24/Jan/2014:11:19:39 -0600')", type: :string
end

# PATH

path = opts[:path]

# SORTING

if opts[:sort] == SERVICE_SORT
  sort = lambda {|a,b| a[0] <=> b[0] }
end

if opts[:sort] == HITS_SORT
  sort = lambda {|a,b| b[1] <=> a[1] }
end

# TIME FILTERING

if opts[:before]
  before = DateTime.strptime(opts[:before], TIME_FORMAT)
end

if opts[:after]
  after = DateTime.strptime(opts[:after], TIME_FORMAT)
end

matches = Analyze::API.perform(path: path, before: before, after: after)

matches.map(&:flatten).sort(&sort).each do |service,hits|
  str = ""
  str += service.to_s
  str += ": "
  str += hits.to_s
  puts str
end
